function MapView(element) {
    var self = this;
    element = element || document.getElementById('map_canvas');

    var myOptions = {
        zoom: 10,
        mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    var initialLocation = new google.maps.LatLng(37.520619, -122.342377);

    var icons = {
        eventDisabled: new google.maps.MarkerImage(
            '<%= asset_path('icons/event_disabled.png') %>',
            new google.maps.Size(30, 27),
            new google.maps.Point(0,0),
            new google.maps.Point(15, 13)
        ),
        eventEnabled: new google.maps.MarkerImage(
            '<%= asset_path('icons/event.png') %>',
            new google.maps.Size(30, 27),
            new google.maps.Point(0,0),
            new google.maps.Point(15, 13)
        ),
        volunteer: new google.maps.MarkerImage(
            '<%= asset_path('icons/volunteer.png') %>',
            new google.maps.Size(24, 24),
            new google.maps.Point(0,0),
            new google.maps.Point(12, 12)
        )
    };

    var map = new google.maps.Map(element, myOptions);
    map.setCenter(initialLocation);

    var missionMarker = new google.maps.Marker({
        map: map,
        icon: icons.eventDisabled
    });
    var circle = new google.maps.Circle({ map: map, clickable: false });

    var infoWindow = new google.maps.InfoWindow();
    google.maps.event.addListener(infoWindow, 'closeclick', onInfoWindowClosed);
    function onInfoWindowClosed() {
        volunteerMarker.setVisible(false);
    }
    var volunteerMarker = new google.maps.Marker({
        map: map,
        icon: icons.volunteer
    });
    self.showVolunteerData = function(location, data) {
        infoWindow.setContent(data);
        volunteerMarker.setPosition(location);
        volunteerMarker.setVisible(true);
        infoWindow.open(map, volunteerMarker);
    };

    var listener;
    self.enableMarkerDrag = function() {
        missionMarker.setDraggable(true);
        //removing right click also disables zoom, so I store it to be removed later
        listener = google.maps.event.addListener(map, 'rightclick', changeMarker);
        google.maps.event.addListener(missionMarker, 'dragend', changeMarker);
    }
    self.disableMarkerDrag = function() {
        google.maps.event.removeListener(listener);
        google.maps.event.clearInstanceListeners(missionMarker);
        missionMarker.setDraggable(false);
    }

    self.onMarkerChanged = null;
    function changeMarker(event) {
        var location = event.latLng;
        map.setCenter(location);
        missionMarker.setPosition(location);
        if (self.onMarkerChanged) {
            self.onMarkerChanged(location);
        }
    }

    self.setMissionLocation = function(loc) {
        if (loc && !isNaN(loc.lat()) && !isNaN(loc.lng())) {
            map.setCenter(loc);
            missionMarker.setPosition(loc);
        }
    };

    self.setRecruitRadius = function(radius, dontFitBounds) {
        radius = radius || 0;
        circle.setOptions({
            center: missionMarker.getPosition(),
            radius: radius * 1609,
            clickable: false,
            strokeWeight: 4,
            strokeColor: '#999999',
            fillOpacity: circle.fillOpacity != null ? circle.fillOpacity : 0.5,
            fillColor: '#000000'
        });

        if (!dontFitBounds && radius > 0) map.fitBounds(circle.getBounds());
    };

    var beatInterval = 500;
    var beatTimeout = null;
    var alternance = false;
    self.startBeating = function() {
        clearTimeout(beatTimeout);

        function beat() {
            alternance = !alternance;
            circle.setOptions({ strokeColor: alternance ? '#999999' : '#ff6600' });
            beatTimeout = setTimeout(beat, beatInterval);
        }
        circle.setOptions({ fillOpacity: 0.3 });
        missionMarker.setIcon(icons.eventEnabled);
        beat();
    };
    self.stopBeating = function() {
        circle.setOptions({ fillOpacity: 0.5, strokeColor: '#999999' });
        missionMarker.setIcon(icons.eventDisabled);

        clearTimeout(beatTimeout);
        beatTimeout = null;
    };
}


